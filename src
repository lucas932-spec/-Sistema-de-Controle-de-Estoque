-- Criação do Banco de Dados
CREATE DATABASE SistemaControleEstoque;
USE SistemaControleEstoque;

-- Criação das Tabelas

-- Tabela de Fornecedores
CREATE TABLE Fornecedores (
    id_fornecedor INT AUTO_INCREMENT PRIMARY KEY,
    nome_fornecedor VARCHAR(100) NOT NULL,
    contato VARCHAR(100),
    endereco VARCHAR(255)
);

-- Tabela de Produtos
CREATE TABLE Produtos (
    id_produto INT AUTO_INCREMENT PRIMARY KEY,
    nome_produto VARCHAR(100) NOT NULL,
    quantidade_estoque INT DEFAULT 0,
    preco DECIMAL(10, 2),
    id_fornecedor INT,
    FOREIGN KEY (id_fornecedor) REFERENCES Fornecedores(id_fornecedor) ON DELETE SET NULL
);

-- Tabela de Pedidos de Reposição
CREATE TABLE PedidosReposicao (
    id_pedido INT AUTO_INCREMENT PRIMARY KEY,
    id_produto INT,
    quantidade INT,
    data_pedido DATE,
    FOREIGN KEY (id_produto) REFERENCES Produtos(id_produto) ON DELETE CASCADE
);

-- Inserção de Dados

-- Adicionando fornecedores à tabela de Fornecedores
INSERT INTO Fornecedores (nome_fornecedor, contato, endereco) VALUES 
('Fornecedor A', 'contatoA@empresa.com', 'Rua A, 100'),
('Fornecedor B', 'contatoB@empresa.com', 'Avenida B, 200'),
('Fornecedor C', 'contatoC@empresa.com', 'Praça C, 300');

-- Adicionando produtos à tabela de Produtos
INSERT INTO Produtos (nome_produto, quantidade_estoque, preco, id_fornecedor) VALUES 
('Produto X', 50, 10.99, 1),
('Produto Y', 30, 5.50, 2),
('Produto Z', 100, 3.75, 3);

-- Adicionando pedidos de reposição à tabela de PedidosReposicao
INSERT INTO PedidosReposicao (id_produto, quantidade, data_pedido) VALUES 
(1, 20, '2024-09-01'),
(2, 15, '2024-09-02'),
(3, 50, '2024-09-03');

-- Consultas

-- 1. Consultar todos os produtos em estoque
SELECT * FROM Produtos;

-- 2. Consultar todos os pedidos de reposição feitos
SELECT p.nome_produto, pr.quantidade, pr.data_pedido 
FROM PedidosReposicao pr
JOIN Produtos p ON pr.id_produto = p.id_produto;

-- 3. Consultar informações sobre os fornecedores
SELECT * FROM Fornecedores;

-- Atualização de Dados

-- 1. Atualizar a quantidade de produtos em estoque após receber um novo pedido de reposição (ex: Produto com id_produto = 1)
UPDATE Produtos 
SET quantidade_estoque = quantidade_estoque + 20
WHERE id_produto = 1;

-- Deleção de Dados

-- 1. Excluir produtos descontinuados (ex: Produto com id_produto = 2)
DELETE FROM Produtos WHERE id_produto = 2;

-- 2. Remover fornecedores que não fazem mais parte da empresa (ex: Fornecedor com id_fornecedor = 3)
DELETE FROM Fornecedores WHERE id_fornecedor = 3;

-- Verificação Final

-- Testar todas as operações implementadas para garantir o funcionamento correto
-- (As consultas anteriores já validam a manipulação correta dos dados)
